#%RAML 0.8
title:     EVE Overseer
version:   v1
baseUri:   http://example.com/api
mediaType: application/json

securitySchemes:
  - oauth_2_0:
      description: |
        EVE Overseer supports OAuth 2.0 for authentificating all API requests
      type: OAuth 2.0
      describedBy:
        headers:
          Authorization:
            description: |
              Used to send a valid OAuth 2 access token. Do not use
              with the "access_token" query string parameter.
            type: string
        queryParameters:
          access_token:
            description: |
              Used to send a valid OAuth 2 access token. Do not use together with
              the "Authorization" header
            type: string
        responses:
          401:
            description: |
              Bad or expired token. This can happen if the user or Dropbox
              revoked or expired an access token. To fix, you should re-
              authenticate the user.
          403:
            description: |
              Bad OAuth request (wrong consumer key, bad nonce, expired
              timestamp...). Unfortunately, re-authenticating the user won't help here.
      settings:
        authorizationUri: http://example.com/oauth/token
        accessTokenUri: http://example.com/oauth/token
        authorizationGrants: [ code, token ]

/account:
  post:
    description: Create a new user
    body:
      application/json:
        example: |
          {
            "email": "john@example.com",
            "username": "John Doe",
            "password": "super_secret"
          }
    responses:
      200:
        body:
          example: |
            {
              "_id":      5416d356205631a938b8c967,
              "username": "John Doe",
              "email":    "john@example.com",
              "avatar":   "https://gravatar.com/avatar/74d17098589adafe4e08b2a132e768d75?s=120&d=identicon"
            }

  get:
    description: Get current user info
    securedBy: [ oauth_2_0 ]
    responses:
      200:
        body:
          example: |
            {
              "_id":      5416d356205631a938b8c967,
              "username": "john",
              "email":    "john@example.com",
              "avatar":   "https://gravatar.com/avatar/74d17098589adafe4e08b2a132e768d75?s=120&d=identicon"
            }

  put:
    description: Update user profile
    securedBy: [ oauth_2_0 ]
    body:
      application/json:
        example: |
          {
            "password": "new_password"
          }
    responses:
      200:
        body:
          example: |
            {
              "_id":      5416d356205631a938b8c967,
              "username": "John Doe",
              "email":    "john@example.com",
              "avatar":   "https://gravatar.com/avatar/74d17098589adafe4e08b2a132e768d75?s=120&d=identicon"
            }

  delete:
    description: Delete permanently the user
    securedBy: [ oauth_2_0 ]

/apikeys:

  get:
    description: Get list of apikeys
    securedBy: [ oauth_2_0 ]
    responses:
      200:
        body:
          example: |
            [
              {
                "keyId":            "123456",
                "verificationCode": "123456789123aze456sdf78989987sdfsdf",
                "accessMask":        1234567,
                "expires":           "2014-10-30 22:59:16",
                "characters":        2
              }
            ]
  post:
    description: Add a new EVE Online ApiKey
    securedBy: [ oauth_2_0 ]
    body:
      application/json:
        example: |
          {
            "keyId": "123456",
            "verificationCode": "123456789123aze456sdf78989987sdfsdf",
          }

  /{apiKeyId}:

    get:
      description: Get details about an apikey
      securedBy:   [oauth_2_0]
      responses:
        200:
          body:
            example: |
              {
                "keyId":            "123456",
                "verificationCode": "123456789123aze456sdf78989987sdfsdf",
                "accessMask":        1234567,
                "expires":           "2014-10-30 22:59:16",
                "characters":        [
                  {
                    "id":   1365215823,
                    "name": "Alexis Prey"
                  }
                ],
                "account": {
                  "logonMinutes": 220,
                  "logonCount": 56,
                  "paidUntil": "2014-12-31 23:56:00"
                }
              }

    delete:
      description: Delete an ApiKey
      securedBy: [ oauth_2_0 ]


/characters:

  get:
    description: Get a list of characters
    securedBy: [ oauth_2_0 ]
    responses:
      200:
        body:
          example: |
            [
              {
                "id":       1365215823,
                "name":     "Alexis Prey",
                "corporation": {
                  "id":   238510404,
                  "name": "Puppies To the Rescue"
                },
                "alliance": {
                  "id":   9999,
                  "name": "Eve-ID Puppies Inc."
                },
                "faction": {
                  "id":   666,
                  "name": "Eve-ID Faction"
                },
                "picture":  "http://img.eveonline.com/avatar/001_512.jpg"
              },
              {
                "id":       2,
                "name":     "Jane Doe",
                "picture":  "http://img.eveonline.com/avatar/002_512.jpg"
              }
            ]

  /{characterId}:

    get:
      description: Get detailed informations for a character
      securedBy: [ oauth_2_0 ]
      responses:
        200:
          body:
            example: |
              {
                "id":          1365215823,
                "name":        "Alexis Prey",
                "corporation": {
                  "id":   238510404,
                  "name": "Puppies To the Rescue"
                },
                "alliance": {
                  "id":   9999,
                  "name": "Eve-ID Puppies Inc."
                },
                "faction": {
                  "id":   666,
                  "name": "Eve-ID Faction"
                },
                "birthdate":   "2006-01-01 00:00:00",
                "race":        "Minmatar",
                "bloodline":   "Brutor",
                "ancestry":    "Slave Child",
                "clone": {
                    "name":        "Clone Grade Pi",
                    "skillPoints": 54600000
                },
                "attributes": {
                  "intelligence" : {
                    "value": 6,
                    "enhancer": {
                      "name": "Memory Augmentation - Basic",
                      "value": 3
                    }
                  },
                  "memory" : {
                    "value": 4,
                    "enhancer": {
                      "name": "Memory Augmentation - Basic",
                      "value": 3
                    }
                  },
                  "charisma" : {
                    "value": 7,
                    "enhancer": {
                      "name": "Limited Social Adaptation Chip",
                      "value": 1
                    }
                  },
                  "perception" : {
                    "value": 12,
                    "enhancer": {
                      "name": "Ocular Filter - Basic",
                      "value": 3
                    }
                  },
                  "willpower" : {
                    "value": 10,
                    "enhancer": {
                      "name": "Neural Boost - Basic",
                      "value": 3
                    }
                  }
                },
                "balance":     "190210393.87",
                "gender":      "Male",
                "picture":     "http://img.eveonline.com/avatar/001_512.jpg"
              }

    /skills:

      get:
        description: Get list of skills
        securedBy: [ oauth_2_0 ]
        queryParameters:
          queued:
            description: Filter for skill queue only
            type:        boolean
            default:     false
        responses:
          200:
            body:
              example: |
                [
                  {
                    "id":          266,
                    "name":        "Corporation Management",
                    "skills": [
                      {
                        "id":          1235,
                        "name":        "Mechanics",
                        "description": "Skill at maintaining the mechanical components and structural integrity of a spaceship. 5% bonus to structure hit points per skill level.",
                        "rank":        1,
                        "level":       5,
                        "points":      123485,
                        "queued":      false,
                      },
                      {
                        "id":          2345,
                        "name":        "Explosive Armor Compensation",
                        "description": "5% bonus to explosive resistance per level for Armor Coatings and Energized Platings",
                        "rank":        2,
                        "level":       3,
                        "points":      1234,
                        "queued": [
                          {
                            "position" : 0,
                            "level"    : 4,
                            "points": {
                              "start": 125662,
                              "end":   170000,
                            }
                            "time": {
                              "start": "2014-10-10 19:08:58",
                              "end":   "2014-10-22 23:51:03",
                            }
                          },
                          {
                            "position" : 1,
                            "level"    : 5,
                            "points": {
                              "start": 170000,
                              "end":   320000,
                            }
                            "time": {
                              "start": "2014-10-22 23:51:03",
                              "end":   "2014-11-22 22:50:32",
                            }
                          }
                        ]
                      }
                    ]
                  }
                ]

    /accounts:
      get:
        description: Get list for a character's financial accounts
        securedBy: [ oauth_2_0 ]
        responses:
          200:
            body:
              example: |
                [
                  {
                    "id":      4807144,
                    "key":     1000,
                    "balance": 209127823.31
                  }
                ]

      /{accountKey}:
        get:
          description: Get financial account journal
          securedBy: [ oauth_2_0 ]
          responses:
            200:
              body:
                example: |
                  [
                    {
                      "account":    1000,
                      "date":       "2008-08-20 05:19:00",
                      "reference":  1572531631,
                      "amount":     -504.00,
                      "balance":    597984259.02,
                      "type":       "Player Trading",
                      "reason":     "Trade in Gerbold III"
                    }
                  ]
